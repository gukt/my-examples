// 所有子项目的通用配置
subprojects {
    apply plugin: 'java'
    // apply plugin: 'eclipse'
    apply plugin: 'idea'

    version '1.0-SNAPSHOT'

    // JVM 版本号要求
    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //定义版本号
    ext {
        springVersion = '4.2.1.RELEASE'
        hibernateVersion = '5.0.5.Final'
    }

    repositories {
        // 添加国内源，提高下载速度
//        maven { url 'http://maven.oschina.net/content/groups/public/' }
//        maven { url 'http://maven.oschina.net/content/groups/thirdparty/' }

        maven { url 'http://localhost:8081/nexus/content/groups/public/' }

        mavenLocal()
        jcenter()
        mavenCentral()
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
        all*.exclude group: 'commons-httpclient'
        // all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    dependencies {
        // 通用依赖
        compile(
                "ch.qos.logback:logback-classic:1.1.3",
                "ch.qos.logback:logback-core:1.1.3",

                "org.slf4j:slf4j-api:1.7.12",
                'log4j:log4j:1.2.17',

                'com.fasterxml.jackson.core:jackson-core:2.4.2',
                'com.fasterxml.jackson.core:jackson-annotations:2.4.2',
                'com.fasterxml.jackson.core:jackson-databind:2.4.2',

                "com.google.guava:guava:18.0",
        )

        // 依赖maven中不存在的jar
        ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

        compile jarTree

        // 测试依赖
        testCompile(
                "junit:junit:4.11"
        )
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Displays all compile jars.') << {
        configurations.compile.each { File file -> println '    ' + file.name }
    }

    task generateSrcDirs(description: 'Generates default source structures') << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }
}

//project(":spring") {
//    dependencies {
//        compile(
//                "org.springframework:spring-context:$springVersion",
//        )
//
//        testCompile(
//                "org.springframework:spring-test:$springVersion",
//        )
//    }
//}
//
//project(":misc") {
//    dependencies {
//        compile(
//                "org.springframework:spring-context:$springVersion",
//                'com.google.protobuf:protobuf-java:2.6.1',
//                "io.grpc:grpc-all:0.9.0",
//                'commons-io:commons-io:2.4',
//                'org.apache.mina:mina-core:2.0.7',
//                'org.zeromq:jeromq:0.3.5',
//                'org.quartz-scheduler:quartz:2.2.2'
//
//
//        )
//    }
//}
//
//project(":zeromq") {
//    dependencies {
//        compile(
//                'org.zeromq:jeromq:0.3.5',
//        )
//    }
//}
//
//project(":mybatis") {
//    dependencies {
//        compile(
//                'org.mybatis:mybatis:3.3.0'
//
//        )
//    }
//}

project(":web-app") {
    apply plugin: 'jetty'

    [jettyRun, jettyRunWar]*.with { httpPort = 8088 }

    jettyRun.stopPort = 8090
    jettyRun.stopKey = 'stopKey'
    jettyStop.stopPort = 8090
    jettyStop.stopKey = 'stopKey'

    dependencies {
        compile(
                "org.springframework:spring-oxm:$springVersion",
                "org.springframework:spring-orm:$springVersion",
                "org.springframework:spring-webmvc:$springVersion",

                "org.hibernate:hibernate-core:$hibernateVersion",

                'org.springframework:spring-support:2.0.8',
                'org.springframework.data:spring-data-mongodb:1.8.1.RELEASE',
                'org.hibernate:hibernate-validator:5.2.2.Final',

                'com.cloudhopper.proxool:proxool:0.9.1',
                'com.cloudhopper.proxool:proxool-cglib:0.9.1',

                'javax.servlet:javax.servlet-api:3.1.0',
                // 'javax.persistence:persistence-api:1.0.2',
                'javax.validation:validation-api:1.1.0.Final',
                'javax.transaction:jta:1.1',
                'javax.mail:mail:1.4.7',
                'mysql:mysql-connector-java:5.1.6',

                "com.google.code:kaptcha:2.3.2",
                'org.apache.velocity:velocity:1.7',
                'org.aspectj:aspectjweaver:1.8.7',
                'com.esotericsoftware.reflectasm:reflectasm:1.09',

                'commons-codec:commons-codec:1.10',
        )

        testCompile(
                "org.springframework:spring-test:$springVersion",
                'org.hamcrest:hamcrest-all:1.3'
        )
    }
}
